{"version":3,"sources":["menu.svg","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["currentMove","difficulties","App","useState","currentPuzzle","setCurrentPuzzle","Chess","puzzles","fen","game","setGame","moveStatus","setMoveStatus","hints","setHints","isSideOpen","SetIsSideOpen","currentMenu","setCurrentMenu","makeMove","move","gameCopy","updateCurrentMove","moves","length","CloseSideBar","cards","console","log","i","push","className","classes","MenuCard","ContentCard","onClick","prev","newMenu","contents","Title","start","end","PuzzleCard","puzzleNumber","load","overlay","overlayHidden","SideBar","sideHidden","SideMenu","SidePuzzles","e","stopPropagation","id","position","arePiecesDraggable","onPieceDrop","source","target","piece","from","to","isCorrect","playedMove","correctMove","gameCopy1","gameCopy2","IsMoveCorrect","setTimeout","boardOrientation","turn","customArrows","msg","button","Correct","Wrong","undo","HintMove","src","menuIcon","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.68470590.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/menu.ed9a6949.svg\";","import classes from \"./App.module.css\";\nimport { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\n\nimport menuIcon from \"./menu.svg\";\n\nimport contents from \"./Contents.json\";\nimport puzzles from \"./Puzzles(main).json\";\n\nlet currentMove = 0;\nlet difficulties = [\"Basic\", \"Intermediate\", \"Advanced\"];\n\nfunction App() {\n    const [currentPuzzle, setCurrentPuzzle] = useState(0);\n\n    const [game, setGame] = useState(new Chess(puzzles[currentPuzzle].fen));\n    const [moveStatus, setMoveStatus] = useState(0);\n\n    const [hints, setHints] = useState([]);\n\n    const [isSideOpen, SetIsSideOpen] = useState(false);\n    const [currentMenu, setCurrentMenu] = useState([-1, -1]);\n\n    // let IsPromotion = (from, to, piece) => {\n    //     if (piece === \"wP\" || piece === \"bP\") {\n    //         if (to[1] === \"1\" || to[1] === \"8\") return true;\n    //     }\n    //     return false;\n    // };\n\n    let makeMove = (move) => {\n        const gameCopy = { ...game };\n        const result = gameCopy.move(move);\n        // console.log(result);\n        if (result) setGame(gameCopy);\n    };\n\n    let IsMoveCorrect = (playedMove, correctMove) => {\n        const gameCopy1 = new Chess(game.fen());\n        const gameCopy2 = new Chess(game.fen());\n        gameCopy1.move(playedMove);\n        gameCopy2.move(correctMove);\n        return gameCopy1.fen() === gameCopy2.fen();\n    };\n\n    let updateCurrentMove = () => {\n        currentMove++;\n        if (currentMove === puzzles[currentPuzzle].moves.length) {\n            setMoveStatus(2);\n        }\n    };\n\n    let PieceMoved = (source, target, piece) => {\n        // console.log(IsPromotion(source, target, piece));\n        let move = { from: source, to: target };\n        let isCorrect = IsMoveCorrect(\n            move,\n            puzzles[currentPuzzle].moves[currentMove]\n        );\n        if (isCorrect) {\n            setMoveStatus(1);\n            updateCurrentMove();\n        }\n\n        makeMove(move);\n\n        // playing enemy move\n        if (isCorrect) {\n            setTimeout(() => {\n                makeMove(puzzles[currentPuzzle].moves[currentMove]);\n                updateCurrentMove();\n                setTimeout(() => {\n                    setMoveStatus((prev) => {\n                        if (prev !== 2) return 0;\n                        else return 2;\n                    });\n                }, 500);\n            }, 200);\n        } else {\n            setMoveStatus(-1);\n        }\n    };\n\n    let clicked = () => {\n        if (moveStatus === -1) {\n            // wrong\n            console.log(puzzles[currentPuzzle].moves);\n            const gameCopy = { ...game };\n            gameCopy.undo();\n            setGame(gameCopy);\n            setMoveStatus(0);\n        } else if (moveStatus === 0) {\n            // hint\n            const gameCopy = { ...game };\n            gameCopy.move(puzzles[currentPuzzle].moves[currentMove]);\n            let HintMove = gameCopy.undo();\n            setHints([[HintMove.from, HintMove.to]]);\n        } else if (moveStatus === 2) {\n            // load next puzzle\n            setMoveStatus(0);\n            setCurrentPuzzle((prev) => {\n                const gameCopy = { ...game };\n                gameCopy.load(puzzles[prev + 1].fen);\n                setGame(gameCopy);\n                currentMove = 0;\n                return prev + 1;\n            });\n        }\n    };\n\n    let changePuzzle = (puzzleNumber) => {\n        setMoveStatus(0);\n        setCurrentPuzzle((prev) => {\n            const gameCopy = { ...game };\n            gameCopy.load(puzzles[puzzleNumber - 1].fen);\n            setGame(gameCopy);\n            currentMove = 0;\n            return puzzleNumber - 1;\n        });\n\n        CloseSideBar();\n    };\n\n    let OpenSideBar = () => {\n        SetIsSideOpen(true);\n    };\n\n    let CloseSideBar = () => {\n        setCurrentMenu([-1, -1]);\n        SetIsSideOpen(false);\n    };\n\n    let cards = [];\n\n    console.log(\"reload\");\n    if (currentMenu[0] === -1) {\n        console.log(\"reload 1\");\n        for (let i = 0; i < contents.length; i++) {\n            cards.push(\n                <div\n                    className={`\n            ${classes.MenuCard}\n            ${classes.ContentCard}\n            `}\n                    onClick={() => {\n                        setCurrentMenu((prev) => {\n                            let newMenu = [...prev];\n                            newMenu[0] = i;\n                            return newMenu;\n                        });\n                    }}\n                    key={i}\n                >\n                    {contents[i].Title}\n                </div>\n            );\n        }\n    } else if (currentMenu[1] === -1) {\n        console.log(\"reload 2\");\n        for (let i = 0; i < 3; i++) {\n            cards.push(\n                <div\n                    className={`\n              ${classes.MenuCard}\n              ${classes.ContentCard}\n              `}\n                    onClick={() => {\n                        setCurrentMenu((prev) => {\n                            let newMenu = [...prev];\n                            newMenu[1] = i;\n                            return newMenu;\n                        });\n                    }}\n                    key={i}\n                >\n                    {difficulties[i]}\n                </div>\n            );\n        }\n    } else {\n        console.log(\"reload 3\");\n        let start =\n            contents[currentMenu[0]][difficulties[currentMenu[1]] + \"_Start\"];\n        let end =\n            contents[currentMenu[0]][difficulties[currentMenu[1]] + \"_End\"];\n        for (let i = start; i <= end; i++) {\n            cards.push(\n                <div\n                    className={`\n      ${classes.MenuCard}\n      ${classes.PuzzleCard}\n      `}\n                    onClick={() => {\n                        changePuzzle(i);\n                    }}\n                    key={i}\n                >\n                    {i}\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div className={classes.App}>\n            <div\n                className={`${classes.overlay} ${\n                    !isSideOpen && classes.overlayHidden\n                }`}\n                onClick={CloseSideBar}\n            >\n                <div\n                    className={`\n                    ${classes.SideBar}\n                    ${!isSideOpen && classes.sideHidden}\n                    ${\n                        currentMenu[1] === -1\n                            ? classes.SideMenu\n                            : classes.SidePuzzles\n                    }\n                    `}\n                    onClick={(e) => {\n                        e.stopPropagation();\n                    }}\n                >\n                    {cards}\n                </div>\n            </div>\n            <Chessboard\n                id=\"Board\"\n                position={game.fen()}\n                arePiecesDraggable={true}\n                onPieceDrop={PieceMoved}\n                boardOrientation={puzzles[currentPuzzle].turn}\n                customArrows={hints}\n            />\n            <div className={classes.msg}>\n                <div\n                    className={`\n                    ${classes.button}\n                    ${(moveStatus === 1 || moveStatus === 2) && classes.Correct}\n                    ${moveStatus === -1 && classes.Wrong}\n                    `}\n                    onClick={clicked}\n                >\n                    {moveStatus === 2 && \"Next Puzzle\"}\n                    {moveStatus === 1 && \"Correct\"}\n                    {moveStatus === 0 && \"Hint\"}\n                    {moveStatus === -1 && \"Retry\"}\n                </div>\n            </div>\n\n            <img\n                onClick={OpenSideBar}\n                src={menuIcon}\n                alt=\"menu-icon\"\n                className={classes.menuIcon}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1CQPS\",\"msg\":\"App_msg__zNxm2\",\"button\":\"App_button__izWfu\",\"Correct\":\"App_Correct__34VvJ\",\"Wrong\":\"App_Wrong__VINz8\",\"overlay\":\"App_overlay__2xu9d\",\"overlayHidden\":\"App_overlayHidden__3Yo2-\",\"SideBar\":\"App_SideBar__ksPW6\",\"sideHidden\":\"App_sideHidden__1U7w_\",\"SideMenu\":\"App_SideMenu__1LgUg\",\"SidePuzzles\":\"App_SidePuzzles__3u5wc\",\"MenuCard\":\"App_MenuCard__2nq83\",\"PuzzleCard\":\"App_PuzzleCard__1L1jW\",\"ContentCard\":\"App_ContentCard__VyBd3\",\"menuIcon\":\"App_menuIcon__32hL-\"};"],"sourceRoot":""}